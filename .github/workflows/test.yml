name: Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        go-version: [ '1.24' ]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Run unit tests
      run: go test ./...
    
    - name: Run integration tests
      run: go test -v ./pkg/api/...
    
    - name: Build all packages
      run: go build ./...
    
    - name: Build examples
      run: |
        cd _examples
        go build .
    
    - name: Build server
      run: |
        cd _server
        go build .
    
    - name: Build CLI
      run: |
        cd cmd/gasdb
        go build .

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Run API integration tests
      run: |
        cd pkg/api
        go test -v -timeout=300s -run TestFuelPriceAPI
